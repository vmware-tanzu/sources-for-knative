/*
Copyright 2020 VMware, Inc.
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vmware-tanzu/sources-for-knative/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VSphereSourceLister helps list VSphereSources.
type VSphereSourceLister interface {
	// List lists all VSphereSources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VSphereSource, err error)
	// VSphereSources returns an object that can list and get VSphereSources.
	VSphereSources(namespace string) VSphereSourceNamespaceLister
	VSphereSourceListerExpansion
}

// vSphereSourceLister implements the VSphereSourceLister interface.
type vSphereSourceLister struct {
	indexer cache.Indexer
}

// NewVSphereSourceLister returns a new VSphereSourceLister.
func NewVSphereSourceLister(indexer cache.Indexer) VSphereSourceLister {
	return &vSphereSourceLister{indexer: indexer}
}

// List lists all VSphereSources in the indexer.
func (s *vSphereSourceLister) List(selector labels.Selector) (ret []*v1alpha1.VSphereSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VSphereSource))
	})
	return ret, err
}

// VSphereSources returns an object that can list and get VSphereSources.
func (s *vSphereSourceLister) VSphereSources(namespace string) VSphereSourceNamespaceLister {
	return vSphereSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VSphereSourceNamespaceLister helps list and get VSphereSources.
type VSphereSourceNamespaceLister interface {
	// List lists all VSphereSources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VSphereSource, err error)
	// Get retrieves the VSphereSource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VSphereSource, error)
	VSphereSourceNamespaceListerExpansion
}

// vSphereSourceNamespaceLister implements the VSphereSourceNamespaceLister
// interface.
type vSphereSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VSphereSources in the indexer for a given namespace.
func (s vSphereSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VSphereSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VSphereSource))
	})
	return ret, err
}

// Get retrieves the VSphereSource from the indexer for a given namespace and name.
func (s vSphereSourceNamespaceLister) Get(name string) (*v1alpha1.VSphereSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vspheresource"), name)
	}
	return obj.(*v1alpha1.VSphereSource), nil
}
