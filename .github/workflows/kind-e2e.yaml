name: KinD e2e tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  ko-resolve:
    name: e2e tests
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
      KO_DOCKER_REPO: kind.local

    steps:
    - name: Set up Go 1.15.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Install Dependencies
      env:
        KO_VERSION: 0.8.1
      run: |
        curl -L https://github.com/google/ko/releases/download/v${KO_VERSION}/ko_${KO_VERSION}_Linux_x86_64.tar.gz | tar xzf - ko
        chmod +x ./ko
        sudo mv ko /usr/local/bin

    - name: Check out code onto GOPATH
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: ./src/github.com/${{ github.repository }}

    - name: Setup KinD Cluster with VMware sources.
      working-directory: ./src/github.com/${{ github.repository }}
      env:
        KIND_VERSION: v0.10.0
      run: |
        set -x

        curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
        chmod +x ./kind
        sudo mv kind /usr/local/bin

        # KinD configuration.
        cat > kind.yaml <<EOF
        apiVersion: kind.x-k8s.io/v1alpha4
        kind: Cluster
        nodes:
        - role: control-plane
        - role: worker
        EOF

        # Create a cluster!
        kind create cluster --config kind.yaml

        # Build and Publish our test images to the docker daemon.
        ./test/upload-test-images.sh

        # Build and Publish our containers to the docker daemon (including test assets)
        export GO111MODULE=on
        export GOFLAGS=-mod=vendor
        ko apply -PRf config/ -f test/config

        # Build Knative plugin and create Secret
        go build -o kn-vsphere ./plugins/vsphere/cmd/vsphere
        ./kn-vsphere login --secret-name vsphere-credentials --username user --password pass

        # DO NOT SUBMIT
        sleep 10
        kubectl -n vmware-sources logs `kubectl get pods --selector=app=webhook -n vmware-sources -o jsonpath='{.items[*].metadata.name}'`
        kubectl -n vmware-sources describe pods
        
        kubectl -n vmware-sources wait --timeout=10s --for=condition=Available deploy/webhook

        # For debugging.
        kubectl get pods --all-namespaces
        kubectl -n vmware-sources describe pods
        kubectl -n vmware-sources get events

        # For logstream to work.
        export SYSTEM_NAMESPACE=vmware-sources
        # Run the tests tagged as e2e on the KinD cluster.
        go test -v -race -timeout=3m -tags=e2e github.com/${{ github.repository }}/test/e2e/...
